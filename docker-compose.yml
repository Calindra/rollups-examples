version: "3.9"

services:
  hardhat:
    image: cartesi/rollups-hardhat:devel
    command:
      [
        "node",
        "--write",
        "true",
        "--network",
        "hardhat",
        "--export",
        "/opt/cartesi/share/blockchain/localhost.json",
      ]
    init: true
    ports:
      - "8545:8545"
    volumes:
      - blockchain-data:/opt/cartesi/share/blockchain

  rollups_dispatcher:
    depends_on: [hardhat]
    image: cartesi/rollups-dispatcher:devel
    command:
      [
        "--dapp-contract-address-file",
        "/opt/cartesi/share/blockchain/dapp.address",
        "--logic-config-path",
        "/opt/cartesi/share/config/logic-config.toml",
        "--sf-config",
        "/opt/cartesi/share/config/sf-config.toml",
        "--bs-config",
        "/opt/cartesi/share/config/bs-config.toml",
        "--tm-config",
        "/opt/cartesi/share/config/tm-config.toml",
        "--mnemonic",
        "test test test test test test test test test test test junk",
        "--chain-id",
        "31337",
      ]
    restart: always
    environment:
      STATE_SERVER_HOSTNAME: state_server
      STATE_SERVER_PORT: "50051"
      SERVER_MANAGER_HOSTNAME: server_manager
      SERVER_MANAGER_PORT: "5001"
      DEPLOYMENT_PATH: /opt/cartesi/share/blockchain/localhost.json
      RUST_LOG: info
    volumes:
      - blockchain-data:/opt/cartesi/share/blockchain:ro
      - ./config:/opt/cartesi/share/config/

  state_server:
    depends_on: [hardhat]
    image: cartesi/delegate-server:devel
    command:
      [
        "--sf-config",
        "/opt/cartesi/share/config/sf-config.toml",
        "--url",
        "http://hardhat:8545",
        "--ws-url",
        "ws://hardhat:8545",
      ]
    restart: always
    environment:
      DEPLOYMENT_PATH: /opt/cartesi/share/blockchain/localhost.json
    volumes:
      - blockchain-data:/opt/cartesi/share/blockchain:ro
      - ./config:/opt/cartesi/share/config/

  server_manager:
    restart: always
    volumes:
      - machine:/opt/cartesi/share/dapp-bin

  deployer:
    depends_on: [hardhat, server_manager]
    restart: on-failure
    image: cartesi/rollups-cli:devel
    command:
      [
        "create",
        "--rpc",
        "http://hardhat:8545",
        "--deploymentFile",
        "/opt/cartesi/share/blockchain/localhost.json",
        "--mnemonic",
        "test test test test test test test test test test test junk",
        "--templateHashFile",
        "/opt/cartesi/share/dapp-bin/hash",
        "--outputFile",
        "/opt/cartesi/share/blockchain/dapp.address",
      ]
    volumes:
      - blockchain-data:/opt/cartesi/share/blockchain
      - machine:/opt/cartesi/share/dapp-bin:ro

  rollups_indexer:
    depends_on: [hardhat]
    image: cartesi/rollups-indexer:devel
    command:
      [
        "--dapp-contract-address-file",
        "/opt/cartesi/share/blockchain/dapp.address",
        "--indexer-config-path",
        "/opt/cartesi/share/config/indexer-config.toml",
      ]
    restart: always
    environment:
      STATE_SERVER_HOSTNAME: state_server
      STATE_SERVER_PORT: "50051"
      SERVER_MANAGER_HOSTNAME: server_manager
      SERVER_MANAGER_PORT: "5001"
      POSTGRES_HOSTNAME: database
      POSTGRES_PORT: "5432"
      DEPLOYMENT_PATH: /opt/cartesi/share/blockchain/dapp.address
      RUST_LOG: info
    volumes:
      - blockchain-data:/opt/cartesi/share/blockchain
      - ./config:/opt/cartesi/share/config/

  query_server:
    image: cartesi/query-server:devel
    ports:
      - "4000:4000"
    links:
      - database
    depends_on:
      - database
    environment:
      - DB_USER=postgres
      - DB_NAME=postgres
      - DB_PASSWORD=password
      - DB_HOST=database
      - DB_PORT=5432
      - DB_TEST_NAME=postgres

  database:
    image: postgres:13-alpine
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - database-data:/var/lib/postgresql/data

volumes:
  blockchain-data: {}
  machine: {}
  database-data: {}
