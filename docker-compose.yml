version: '3.9'

x-environment:
  &rollups-config
    LOGIC_CONFIG_PATH: /opt/cartesi/share/config/logic-config.toml
    STATE_FOLD_CONFIG_PATH: /opt/cartesi/share/config/sf-config.toml
    BLOCK_SUBSCRIBER_CONFIG_PATH: /opt/cartesi/share/config/bs-config.toml
    TX_MANAGER_CONFIG_PATH: /opt/cartesi/share/config/tm-config.toml
    INDEXER_CONFIG_PATH: /opt/cartesi/share/config/indexer-config.toml
    STATE_SERVER_HOSTNAME: state_server
    STATE_SERVER_PORT: "50051"
    SERVER_MANAGER_HOSTNAME: server_manager
    SERVER_MANAGER_PORT: "5001"
    DEPLOYMENT_PATH: /opt/cartesi/share/blockchain/localhost.json
    URL: http://hardhat:8545

services:
  hardhat:
    command: ["node", "--write", "true", "--network", "hardhat", "--export", "/opt/cartesi/share/blockchain/localhost.json"]
    init: true
    ports:
      - '8545:8545'
    volumes:
      - blockchain-data:/opt/cartesi/share/blockchain
      - ./hardhat/deployments:/app/deployments

  rollups_dispatcher:
    depends_on: [hardhat]
    image: cartesi/rollups-dispatcher:0.2.0
    restart: always
    environment:
      << : *rollups-config
      # TODO: currently hardhat's default mnemonic
      # this should become a secret
      MNEMONIC: test test test test test test test test test test test junk
      CHAIN_ID: 31337
      RUST_LOG: info
    volumes:
      - blockchain-data:/opt/cartesi/share/blockchain:ro
      - ./config:/opt/cartesi/share/config/

  state_server:
    depends_on: [hardhat]
    image: cartesi/delegate-server:0.2.0
    platform: linux/amd64
    restart: always
    environment:
      << : *rollups-config
    volumes:
      - blockchain-data:/opt/cartesi/share/blockchain:ro
      - ./config:/opt/cartesi/share/config/

  server_manager:
    restart: always

  rollups_indexer:
    depends_on: [hardhat]
    image: cartesi/rollups-indexer:0.2.0
    restart: always
    environment:
      << : *rollups-config
      POSTGRES_HOSTNAME: database
      POSTGRES_PORT: "5432"
    volumes:
      - blockchain-data:/opt/cartesi/share/blockchain
      - ./config:/opt/cartesi/share/config/

  query_server:
    image: cartesi/query-server:0.2.0
    platform: linux/amd64
    ports:
      - '4000:4000'
    links:
      - database
    depends_on:
      - database
    environment:
      - DB_USER=postgres
      - DB_NAME=postgres
      - DB_PASSWORD=password
      - DB_HOST=database
      - DB_TEST_NAME=postgres

  database:
    image: postgres:12
    platform: linux/amd64
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - database-data:/var/lib/postgresql/data

volumes:
  blockchain-data: {}
  database-data: {}
