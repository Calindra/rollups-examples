# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
---
name: "DApp Build"
on:
    workflow_call:
        inputs:
            dapp-name:
                required: true
                type: string
        secrets:
            DOCKER_ORGANIZATION:
                required: true
            DOCKER_USERNAME:
                required: true
            DOCKER_PASSWORD:
                required: true

jobs:
    build_package:
        runs-on: ubuntu-20.04
        steps:
            - uses: actions/checkout@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v4
              with:
                  bake-target: server
                  images: ${{ secrets.DOCKER_ORGANIZATION }}/dapp
                  tags: type=semver,prefix=${{ inputs.dapp-name }}-,pattern={{version}},suffix=-server

            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Build and push
              id: build
              uses: tuler/bake-action@49296ad87bc0081ff6973a65aaa7335e8340e76f
              with:
                  working-directory: ${{ inputs.dapp-name }}
                  push: ${{ startsWith(github.ref, 'refs/tags/v') }}
                  load: true
                  targets: server
                  files: |
                      docker-bake.hcl
                      docker-bake.override.hcl
                      ${{ steps.meta.outputs.bake-file }}
                  set: |
                      *.cache-from=type=gha
                      *.cache-to=type=gha,mode=max

            - name: Get image hash
              id: hash
              run: |
                  export IMAGE_HASH="${{ fromJSON(steps.build.outputs.metadata).server['containerimage.config.digest'] }}"
                  echo "::set-output name=hash::${IMAGE_HASH#*:}"

            - name: Export image
              run: docker image save -o server_manager.tar ${{steps.hash.outputs.hash}}

            - name: Upload image
              uses: actions/upload-artifact@master
              with:
                  name: server_manager.tar
                  path: ./server_manager.tar
